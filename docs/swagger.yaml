definitions:
  types.JobReqDoc:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      mediaID:
        type: string
      type:
        $ref: '#/definitions/types.JobTypeEnum'
      updatedAt:
        type: string
    type: object
  types.JobResDoc:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      jobReqID:
        type: string
      result: {}
      updatedAt:
        type: string
    type: object
  types.JobTypeEnum:
    enum:
    - THUMBNAIL
    - SPRITE
    type: string
    x-enum-varnames:
    - THUMBNAILJobType
    - SPRITEJobType
  types.MediaFileDoc:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      messageID:
        type: integer
      meta:
        $ref: '#/definitions/types.MediaFileMeta'
      sprite:
        type: string
      thumbnail:
        type: string
      updatedAt:
        type: string
      vtt:
        type: string
    type: object
  types.MediaFileMeta:
    properties:
      fileID:
        type: integer
      fileName:
        type: string
      fileSize:
        type: integer
      mimeType:
        type: string
    type: object
  web.InfoGetResType:
    properties:
      mediaCount:
        type: integer
    type: object
  web.JobResPostReqType:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: string
      jobReqID:
        type: string
      result: {}
      updatedAt:
        type: string
    type: object
  web.LoginPostReqType:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /api/info:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.InfoGetResType'
      security:
      - ApiKeyAuth: []
      summary: Info summary
  /api/jobReq:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.JobReqDoc'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List job requests
      tags:
      - jobReq
  /api/jobReq/{id}:
    delete:
      parameters:
      - description: Job Request ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete job request
      tags:
      - jobReq
  /api/jobRes:
    post:
      consumes:
      - application/json
      parameters:
      - description: Job Response Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/web.JobResPostReqType'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.JobResDoc'
      security:
      - ApiKeyAuth: []
      summary: Create job response
      tags:
      - jobRes
  /api/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return a token
      parameters:
      - description: Login Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/web.LoginPostReqType'
      produces:
      - application/json
      responses: {}
      summary: Login
  /api/media:
    get:
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.MediaFileDoc'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List media
      tags:
      - media
  /api/media/{id}:
    delete:
      parameters:
      - description: Media ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Delete media
      tags:
      - media
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
