// Code generated by mockery v2.44.1. DO NOT EDIT.

package db

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockIMinioClient is an autogenerated mock type for the IMinioClient type
type MockIMinioClient struct {
	mock.Mock
}

type MockIMinioClient_Expecter struct {
	mock *mock.Mock
}

func (_m *MockIMinioClient) EXPECT() *MockIMinioClient_Expecter {
	return &MockIMinioClient_Expecter{mock: &_m.Mock}
}

// CreateBucket provides a mock function with given fields: ctx
func (_m *MockIMinioClient) CreateBucket(ctx context.Context) error {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for CreateBucket")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockIMinioClient_CreateBucket_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateBucket'
type MockIMinioClient_CreateBucket_Call struct {
	*mock.Call
}

// CreateBucket is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockIMinioClient_Expecter) CreateBucket(ctx interface{}) *MockIMinioClient_CreateBucket_Call {
	return &MockIMinioClient_CreateBucket_Call{Call: _e.mock.On("CreateBucket", ctx)}
}

func (_c *MockIMinioClient_CreateBucket_Call) Run(run func(ctx context.Context)) *MockIMinioClient_CreateBucket_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *MockIMinioClient_CreateBucket_Call) Return(_a0 error) *MockIMinioClient_CreateBucket_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIMinioClient_CreateBucket_Call) RunAndReturn(run func(context.Context) error) *MockIMinioClient_CreateBucket_Call {
	_c.Call.Return(run)
	return _c
}

// FileAdd provides a mock function with given fields: ctx, fileName, data
func (_m *MockIMinioClient) FileAdd(ctx context.Context, fileName string, data []byte) error {
	ret := _m.Called(ctx, fileName, data)

	if len(ret) == 0 {
		panic("no return value specified for FileAdd")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, []byte) error); ok {
		r0 = rf(ctx, fileName, data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockIMinioClient_FileAdd_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FileAdd'
type MockIMinioClient_FileAdd_Call struct {
	*mock.Call
}

// FileAdd is a helper method to define mock.On call
//   - ctx context.Context
//   - fileName string
//   - data []byte
func (_e *MockIMinioClient_Expecter) FileAdd(ctx interface{}, fileName interface{}, data interface{}) *MockIMinioClient_FileAdd_Call {
	return &MockIMinioClient_FileAdd_Call{Call: _e.mock.On("FileAdd", ctx, fileName, data)}
}

func (_c *MockIMinioClient_FileAdd_Call) Run(run func(ctx context.Context, fileName string, data []byte)) *MockIMinioClient_FileAdd_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].([]byte))
	})
	return _c
}

func (_c *MockIMinioClient_FileAdd_Call) Return(_a0 error) *MockIMinioClient_FileAdd_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIMinioClient_FileAdd_Call) RunAndReturn(run func(context.Context, string, []byte) error) *MockIMinioClient_FileAdd_Call {
	_c.Call.Return(run)
	return _c
}

// FileAddStr provides a mock function with given fields: ctx, fileName, data
func (_m *MockIMinioClient) FileAddStr(ctx context.Context, fileName string, data string) error {
	ret := _m.Called(ctx, fileName, data)

	if len(ret) == 0 {
		panic("no return value specified for FileAddStr")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, fileName, data)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockIMinioClient_FileAddStr_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FileAddStr'
type MockIMinioClient_FileAddStr_Call struct {
	*mock.Call
}

// FileAddStr is a helper method to define mock.On call
//   - ctx context.Context
//   - fileName string
//   - data string
func (_e *MockIMinioClient_Expecter) FileAddStr(ctx interface{}, fileName interface{}, data interface{}) *MockIMinioClient_FileAddStr_Call {
	return &MockIMinioClient_FileAddStr_Call{Call: _e.mock.On("FileAddStr", ctx, fileName, data)}
}

func (_c *MockIMinioClient_FileAddStr_Call) Run(run func(ctx context.Context, fileName string, data string)) *MockIMinioClient_FileAddStr_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *MockIMinioClient_FileAddStr_Call) Return(_a0 error) *MockIMinioClient_FileAddStr_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIMinioClient_FileAddStr_Call) RunAndReturn(run func(context.Context, string, string) error) *MockIMinioClient_FileAddStr_Call {
	_c.Call.Return(run)
	return _c
}

// FileRm provides a mock function with given fields: ctx, fileName
func (_m *MockIMinioClient) FileRm(ctx context.Context, fileName string) error {
	ret := _m.Called(ctx, fileName)

	if len(ret) == 0 {
		panic("no return value specified for FileRm")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, fileName)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockIMinioClient_FileRm_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FileRm'
type MockIMinioClient_FileRm_Call struct {
	*mock.Call
}

// FileRm is a helper method to define mock.On call
//   - ctx context.Context
//   - fileName string
func (_e *MockIMinioClient_Expecter) FileRm(ctx interface{}, fileName interface{}) *MockIMinioClient_FileRm_Call {
	return &MockIMinioClient_FileRm_Call{Call: _e.mock.On("FileRm", ctx, fileName)}
}

func (_c *MockIMinioClient_FileRm_Call) Run(run func(ctx context.Context, fileName string)) *MockIMinioClient_FileRm_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockIMinioClient_FileRm_Call) Return(_a0 error) *MockIMinioClient_FileRm_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIMinioClient_FileRm_Call) RunAndReturn(run func(context.Context, string) error) *MockIMinioClient_FileRm_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockIMinioClient creates a new instance of MockIMinioClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIMinioClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIMinioClient {
	mock := &MockIMinioClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
