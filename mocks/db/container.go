// Code generated by MockGen. DO NOT EDIT.
// Source: container.go
//
// Generated by this command:
//
//	mockgen -source=container.go -destination=../../mocks/db/container.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	minio "github.com/amirdaaee/TGMon/internal/db/minio"
	mongo "github.com/amirdaaee/TGMon/internal/db/mongo"
	gomock "go.uber.org/mock/gomock"
)

// MockIDbContainer is a mock of IDbContainer interface.
type MockIDbContainer struct {
	ctrl     *gomock.Controller
	recorder *MockIDbContainerMockRecorder
	isgomock struct{}
}

// MockIDbContainerMockRecorder is the mock recorder for MockIDbContainer.
type MockIDbContainerMockRecorder struct {
	mock *MockIDbContainer
}

// NewMockIDbContainer creates a new mock instance.
func NewMockIDbContainer(ctrl *gomock.Controller) *MockIDbContainer {
	mock := &MockIDbContainer{ctrl: ctrl}
	mock.recorder = &MockIDbContainerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDbContainer) EXPECT() *MockIDbContainerMockRecorder {
	return m.recorder
}

// GetMinioContainer mocks base method.
func (m *MockIDbContainer) GetMinioContainer() minio.IMinioContainer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMinioContainer")
	ret0, _ := ret[0].(minio.IMinioContainer)
	return ret0
}

// GetMinioContainer indicates an expected call of GetMinioContainer.
func (mr *MockIDbContainerMockRecorder) GetMinioContainer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMinioContainer", reflect.TypeOf((*MockIDbContainer)(nil).GetMinioContainer))
}

// GetMongoContainer mocks base method.
func (m *MockIDbContainer) GetMongoContainer() mongo.IMongoContainer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMongoContainer")
	ret0, _ := ret[0].(mongo.IMongoContainer)
	return ret0
}

// GetMongoContainer indicates an expected call of GetMongoContainer.
func (mr *MockIDbContainerMockRecorder) GetMongoContainer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMongoContainer", reflect.TypeOf((*MockIDbContainer)(nil).GetMongoContainer))
}
