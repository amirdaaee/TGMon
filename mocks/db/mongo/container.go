// Code generated by MockGen. DO NOT EDIT.
// Source: container.go
//
// Generated by this command:
//
//	mockgen -source=container.go -destination=../../../mocks/db/mongo/container.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	mongo "github.com/amirdaaee/TGMon/internal/db/mongo"
	types "github.com/amirdaaee/TGMon/internal/types"
	gomock "go.uber.org/mock/gomock"
)

// MockIMongoContainer is a mock of IMongoContainer interface.
type MockIMongoContainer struct {
	ctrl     *gomock.Controller
	recorder *MockIMongoContainerMockRecorder
	isgomock struct{}
}

// MockIMongoContainerMockRecorder is the mock recorder for MockIMongoContainer.
type MockIMongoContainerMockRecorder struct {
	mock *MockIMongoContainer
}

// NewMockIMongoContainer creates a new mock instance.
func NewMockIMongoContainer(ctrl *gomock.Controller) *MockIMongoContainer {
	mock := &MockIMongoContainer{ctrl: ctrl}
	mock.recorder = &MockIMongoContainerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMongoContainer) EXPECT() *MockIMongoContainerMockRecorder {
	return m.recorder
}

// GetJobReqCollection mocks base method.
func (m *MockIMongoContainer) GetJobReqCollection() mongo.ICollection[types.JobReqDoc] {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJobReqCollection")
	ret0, _ := ret[0].(mongo.ICollection[types.JobReqDoc])
	return ret0
}

// GetJobReqCollection indicates an expected call of GetJobReqCollection.
func (mr *MockIMongoContainerMockRecorder) GetJobReqCollection() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJobReqCollection", reflect.TypeOf((*MockIMongoContainer)(nil).GetJobReqCollection))
}

// GetJobResCollection mocks base method.
func (m *MockIMongoContainer) GetJobResCollection() mongo.ICollection[types.JobResDoc] {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJobResCollection")
	ret0, _ := ret[0].(mongo.ICollection[types.JobResDoc])
	return ret0
}

// GetJobResCollection indicates an expected call of GetJobResCollection.
func (mr *MockIMongoContainerMockRecorder) GetJobResCollection() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJobResCollection", reflect.TypeOf((*MockIMongoContainer)(nil).GetJobResCollection))
}

// GetMediaFileCollection mocks base method.
func (m *MockIMongoContainer) GetMediaFileCollection() mongo.ICollection[types.MediaFileDoc] {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMediaFileCollection")
	ret0, _ := ret[0].(mongo.ICollection[types.MediaFileDoc])
	return ret0
}

// GetMediaFileCollection indicates an expected call of GetMediaFileCollection.
func (mr *MockIMongoContainerMockRecorder) GetMediaFileCollection() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMediaFileCollection", reflect.TypeOf((*MockIMongoContainer)(nil).GetMediaFileCollection))
}

// GetMongoClient mocks base method.
func (m *MockIMongoContainer) GetMongoClient() mongo.IMongoClient {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMongoClient")
	ret0, _ := ret[0].(mongo.IMongoClient)
	return ret0
}

// GetMongoClient indicates an expected call of GetMongoClient.
func (mr *MockIMongoContainerMockRecorder) GetMongoClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMongoClient", reflect.TypeOf((*MockIMongoContainer)(nil).GetMongoClient))
}

// GetMongoDb mocks base method.
func (m *MockIMongoContainer) GetMongoDb() mongo.IDatabase {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMongoDb")
	ret0, _ := ret[0].(mongo.IDatabase)
	return ret0
}

// GetMongoDb indicates an expected call of GetMongoDb.
func (mr *MockIMongoContainerMockRecorder) GetMongoDb() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMongoDb", reflect.TypeOf((*MockIMongoContainer)(nil).GetMongoDb))
}
