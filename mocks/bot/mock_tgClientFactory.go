// Code generated by mockery v2.44.1. DO NOT EDIT.

package bot

import (
	bot "github.com/amirdaaee/TGMon/internal/bot"
	mock "github.com/stretchr/testify/mock"
)

// MocktgClientFactory is an autogenerated mock type for the tgClientFactory type
type MocktgClientFactory struct {
	mock.Mock
}

type MocktgClientFactory_Expecter struct {
	mock *mock.Mock
}

func (_m *MocktgClientFactory) EXPECT() *MocktgClientFactory_Expecter {
	return &MocktgClientFactory_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: token, sessConfig
func (_m *MocktgClientFactory) Execute(token string, sessConfig *bot.SessionConfig) bot.IClient {
	ret := _m.Called(token, sessConfig)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 bot.IClient
	if rf, ok := ret.Get(0).(func(string, *bot.SessionConfig) bot.IClient); ok {
		r0 = rf(token, sessConfig)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(bot.IClient)
		}
	}

	return r0
}

// MocktgClientFactory_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MocktgClientFactory_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - token string
//   - sessConfig *bot.SessionConfig
func (_e *MocktgClientFactory_Expecter) Execute(token interface{}, sessConfig interface{}) *MocktgClientFactory_Execute_Call {
	return &MocktgClientFactory_Execute_Call{Call: _e.mock.On("Execute", token, sessConfig)}
}

func (_c *MocktgClientFactory_Execute_Call) Run(run func(token string, sessConfig *bot.SessionConfig)) *MocktgClientFactory_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(*bot.SessionConfig))
	})
	return _c
}

func (_c *MocktgClientFactory_Execute_Call) Return(_a0 bot.IClient) *MocktgClientFactory_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MocktgClientFactory_Execute_Call) RunAndReturn(run func(string, *bot.SessionConfig) bot.IClient) *MocktgClientFactory_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMocktgClientFactory creates a new instance of MocktgClientFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMocktgClientFactory(t interface {
	mock.TestingT
	Cleanup(func())
}) *MocktgClientFactory {
	mock := &MocktgClientFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
